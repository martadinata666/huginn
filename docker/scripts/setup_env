#!/bin/bash
set -e

export LC_ALL=en_US.UTF-8

export HOME=/app
cd

if [ -f /app/tmp/pids/delayed_job.pid ]; then
  rm /app/tmp/pids/delayed_job.pid
fi

# DATABASE_URL takes the highest precedence.
if [[ -z "$DATABASE_URL" ]]; then
    echo "DATABASE_URL not set, please set DATABASE_URL"
fi

RAILS_ENV=${HUGINN_RAILS_ENV:-${RAILS_ENV:-production}}
RAILS_LOG_TO_STDOUT=${RAILS_LOG_TO_STDOUT:-true}
RAILS_SERVE_STATIC_FILES=${RAILS_SERVE_STATIC_FILES:-true}
IP="${IP:-0.0.0.0}"
PORT=${HUGINN_PORT:-${PORT:-3000}}
PORT="$(echo $PORT|awk -F ':' '{print $NF}')"
HUGINN_PORT=${PORT}

cp -a /app/.env.example /tmp/

# Do we have a Rails secret yet?
# If not, generate one, but persist it for the container's lifetime.
if [ -z "$APP_SECRET_TOKEN" ] && grep -q ^APP_SECRET_TOKEN=REPLACE_ME_NOW /tmp/.env.example; then
    [ -e '/tmp/secret' ] && secret="$(cat /tmp/secret)"
    if [ -z "$secret" ]; then
        echo 'Generating random APP_SECRET_TOKEN.'
        secret=$(dd if=/dev/urandom bs=36 count=1 | openssl base64)
        echo "$secret" > /tmp/secret
    fi
    sed -i "s:REPLACE_ME_NOW!:$secret:" /tmp/.env.example
fi

# Add ENV variables to .env.example which are not present in it but usable
cat >> /tmp/.env.example <<EOF
ASSET_HOST=
DEFAULT_SCENARIO_FILE=
IP=
RAILS_ENV=
RAILS_LOG_TO_STDOUT=
RAILS_SERVE_STATIC_FILES=
SEED_EMAIL=
SEED_PASSWORD=
SEED_USERNAME=
SMTP_OPENSSL_CA_FILE=
SMTP_OPENSSL_CA_PATH=
SMTP_OPENSSL_VERIFY_MODE=
START_MYSQL=
EOF

[ -e '/app/.env' ] && cat /app/.env >> /tmp/.env.example

quote_if_necessary() {
  if grep -q -E -e '^".*" *$' -e "^'.*' *$" <<<"$*"; then
    # preserve single or double quotes if they are provided
    echo "$*";
  else
    # otherwise double quote the string after escaping \, $, `
    echo "\"$(sed -e 's/\\/\\\\/g' -e 's/\$/\\\$/g' -e 's/`/\\`/g' <<<"$*")\""
  fi
}

# Default to the environment variable values set in .env.example
sed -n -r -e 's/^#?([A-Za-z0-9_]+=.*)/\1/p' /tmp/.env.example | \
  while IFS='=' read var value ; do
    huginn_var="HUGINN_$var"
    val="${!huginn_var:-${!var:-$value}}"
    echo "$var=$(quote_if_necessary $val)"
  done > /tmp/.env

source /tmp/.env

[ -e '/app/.env' ] || cp -a /tmp/.env /app/
chmod ugo+r /app/.env
rm -f /tmp/.env.example

bundle config set --local path vendor/bundle
bundle config set --local without 'test development'
bundle install

# Configure the unicorn server
sed -r config/unicorn.rb.example \
    -e "s/^ *listen .+/listen '$IP:$PORT'/" \
    -e 's;^ *stderr_path .+;stderr_path "/dev/stderr";' \
    -e 's;^ *stdout_path .+;stdout_path "/dev/stdout";' \
    -e '/^ *pid .+/d' > config/unicorn.rb

mkdir -p tmp/pids tmp/cache tmp/sockets log
